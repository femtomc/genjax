from beartype import BeartypeConf
from beartype.claw import beartype_this_package

conf = BeartypeConf(
    is_color=True,
    is_debug=False,
    is_pep484_tower=True,
    violation_type=TypeError,
)

beartype_this_package(conf=conf)

from .adev import (  # noqa: E402
    Dual,
    categorical_enum_parallel,
    expectation,
    flip_enum,
    flip_enum_parallel,
    flip_mvd,
    flip_reinforce,
    geometric_reinforce,
    normal_reinforce,
    normal_reparam,
    multivariate_normal_reparam,
    multivariate_normal_reinforce,
)
from .core import (  # noqa: E402
    GFI,
    Distribution,
    Fn,
    Pytree,
    Const,
    const,
    Fixed,
    fixed,
    NotFixedException,
    Trace,
    Tr,
    Vmap,
    Scan,
    Cond,
    gen,
    get_choices,
    tfp_distribution,
    trace,
    sel,
    Selection,
)
from .pjax import (  # noqa: E402
    modular_vmap,
    seed,
)
from .distributions import (  # noqa: E402
    bernoulli,
    beta,
    categorical,
    flip,
    normal,
    uniform,
    exponential,
    poisson,
    multivariate_normal,
    dirichlet,
    # High-priority additional distributions
    binomial,
    gamma,
    log_normal,
    student_t,
    laplace,
    half_normal,
    inverse_gamma,
    weibull,
    cauchy,
    chi2,
    multinomial,
    negative_binomial,
    zipf,
)
from .inference import (  # noqa: E402
    # MCMC
    MCMCResult,
    chain,
    mh,
    mala,
    # SMC
    ParticleCollection,
    init,
    change,
    extend,
    rejuvenate,
    resample,
    rejuvenation_smc,
)
from .state import (  # noqa: E402
    state,
    save,
    tag_state,
    namespace,
)

# Import extras module for additional functionality
from . import extras  # noqa: E402
from .extras import (  # noqa: E402
    # Discrete HMM functionality
    discrete_hmm,
    forward_filter,
    backward_sample,
    forward_filtering_backward_sampling,
    compute_sequence_log_prob,
    sample_hmm_dataset,
    DiscreteHMMTrace,
    # Linear Gaussian state space model functionality
    kalman_filter,
    kalman_smoother,
    sample_linear_gaussian_dataset,
    LinearGaussianTrace,
    # Inference testing API
    discrete_hmm_test_dataset,
    discrete_hmm_exact_log_marginal,
    linear_gaussian_test_dataset,
    linear_gaussian_exact_log_marginal,
    # Inference problem generators
    discrete_hmm_inference_problem,
    linear_gaussian_inference_problem,
)

__all__ = [
    "GFI",
    "Distribution",
    "Dual",
    "Fn",
    "Pytree",
    "Const",
    "const",
    "Fixed",
    "fixed",
    "NotFixedException",
    "Trace",
    "Tr",
    "Vmap",
    "Scan",
    "Cond",
    "bernoulli",
    "beta",
    "uniform",
    "exponential",
    "poisson",
    "categorical",
    "categorical_enum_parallel",
    "dirichlet",
    # High-priority additional distributions
    "binomial",
    "gamma",
    "log_normal",
    "student_t",
    "laplace",
    "half_normal",
    "inverse_gamma",
    "weibull",
    "cauchy",
    "chi2",
    "multinomial",
    "negative_binomial",
    "zipf",
    "expectation",
    "flip",
    "flip_enum",
    "flip_enum_parallel",
    "flip_mvd",
    "flip_reinforce",
    "gen",
    "geometric_reinforce",
    "get_choices",
    "MCMCResult",
    "chain",
    "mh",
    "mala",
    "compute_rhat",
    "compute_ess",
    "modular_vmap",
    "normal",
    "normal_reinforce",
    "normal_reparam",
    "multivariate_normal",
    "multivariate_normal_reparam",
    "multivariate_normal_reinforce",
    "seed",
    "sel",
    "Selection",
    "tfp_distribution",
    "trace",
    "ParticleCollection",
    "init",
    "change",
    "extend",
    "rejuvenate",
    "resample",
    "rejuvenation_smc",
    # State functionality
    "state",
    "save",
    "tag_state",
    "namespace",
    # Extras
    "extras",
    # Discrete HMM
    "discrete_hmm",
    "forward_filter",
    "backward_sample",
    "forward_filtering_backward_sampling",
    "compute_sequence_log_prob",
    "sample_hmm_dataset",
    "DiscreteHMMTrace",
    # Linear Gaussian state space model
    "linear_gaussian_ssm",
    "kalman_filter",
    "kalman_smoother",
    "sample_linear_gaussian_dataset",
    "LinearGaussianTrace",
    # Inference testing API
    "discrete_hmm_test_dataset",
    "discrete_hmm_exact_log_marginal",
    "linear_gaussian_test_dataset",
    "linear_gaussian_exact_log_marginal",
    # Inference problem generators
    "discrete_hmm_inference_problem",
    "linear_gaussian_inference_problem",
]
