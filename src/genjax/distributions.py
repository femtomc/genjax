"""Standard probability distributions for GenJAX.

This module provides a collection of common probability distributions
wrapped as GenJAX Distribution objects. All distributions are built
using TensorFlow Probability as the backend.
"""

import jax.numpy as jnp
from tensorflow_probability.substrates import jax as tfp

from genjax.core import (
    tfp_distribution,
)

tfd = tfp.distributions

# Discrete distributions
bernoulli = tfp_distribution(
    tfd.Bernoulli,
    name="Bernoulli",
)
"""Bernoulli distribution for binary outcomes.

Mathematical Formulation:
    PMF: P(X = k) = p^k √ó (1-p)^(1-k) for k ‚àà {0, 1}

    Where p is the probability of success.

    Mean: ùîº[X] = p
    Variance: Var[X] = p(1-p)
    Support: {0, 1}

Parameterization:
    Can be specified via:
    - probs: p ‚àà [0, 1] (probability of success)
    - logits: log(p/(1-p)) ‚àà ‚Ñù (log-odds)

Args:
    logits: Log-odds of success, or
    probs: Probability of success.

References:
    .. [1] Johnson, N. L., Kotz, S., & Kemp, A. W. (1992). "Univariate
           Discrete Distributions". Wiley, Chapter 3.
"""

flip = tfp_distribution(
    lambda p: tfd.Bernoulli(probs=p, dtype=jnp.bool_),
    name="Flip",
)
"""Flip distribution (Bernoulli with boolean output).

Args:
    p: Probability of True outcome.
"""

# Continuous distributions
beta = tfp_distribution(
    tfd.Beta,
    name="Beta",
)
"""Beta distribution on the interval [0, 1].

Mathematical Formulation:
    PDF: f(x; Œ±, Œ≤) = Œì(Œ±+Œ≤)/(Œì(Œ±)Œì(Œ≤)) √ó x^(Œ±-1) √ó (1-x)^(Œ≤-1)

    Where Œì is the gamma function, Œ± > 0, Œ≤ > 0.

    Mean: ùîº[X] = Œ±/(Œ±+Œ≤)
    Variance: Var[X] = Œ±Œ≤/((Œ±+Œ≤)¬≤(Œ±+Œ≤+1))
    Mode: (Œ±-1)/(Œ±+Œ≤-2) for Œ±,Œ≤ > 1
    Support: [0, 1]

Special Cases:
    - Beta(1, 1) = Uniform(0, 1)
    - Beta(Œ±, Œ±) is symmetric about 0.5
    - As Œ±,Œ≤ ‚Üí ‚àû with Œ±/(Œ±+Œ≤) fixed, approaches Normal

Args:
    concentration1: Alpha parameter Œ± (> 0).
    concentration0: Beta parameter Œ≤ (> 0).

References:
    .. [1] Gupta, A. K., & Nadarajah, S. (2004). "Handbook of Beta
           Distribution and Its Applications". CRC Press.
"""

categorical = tfp_distribution(
    lambda logits: tfd.Categorical(logits),
    name="Categorical",
)
"""Categorical distribution over discrete outcomes.

Mathematical Formulation:
    PMF: P(X = k) = p_k for k ‚àà {0, 1, ..., K-1}

    Where ‚àë_k p_k = 1 and p_k ‚â• 0.

    Mean: ùîº[X] = ‚àë_k k √ó p_k
    Variance: Var[X] = ‚àë_k k¬≤ √ó p_k - (ùîº[X])¬≤
    Entropy: H[X] = -‚àë_k p_k log(p_k)
    Support: {0, 1, ..., K-1}

Parameterization:
    - logits: Œ∏_k ‚àà ‚Ñù, where p_k = exp(Œ∏_k) / ‚àë_j exp(Œ∏_j)
    - Softmax transformation ensures valid probabilities

Connection to Other Distributions:
    - K=2: Equivalent to Bernoulli
    - Generalization of multinomial for single trial

Args:
    logits: Log-probabilities Œ∏ for each category.

References:
    .. [1] Bishop, C. M. (2006). "Pattern Recognition and Machine Learning".
           Springer, Section 2.2.
"""

geometric = tfp_distribution(
    tfd.Geometric,
    name="Geometric",
)
"""Geometric distribution (number of trials until first success).

Mathematical Formulation:
    PMF: P(X = k) = (1-p)^(k-1) √ó p for k ‚àà {1, 2, 3, ...}

    Where p ‚àà (0, 1] is the probability of success.

    Mean: ùîº[X] = 1/p
    Variance: Var[X] = (1-p)/p¬≤
    CDF: F(k) = 1 - (1-p)^k
    Support: {1, 2, 3, ...}

Memoryless Property:
    P(X > m + n | X > m) = P(X > n)

    The only discrete distribution with this property.

Alternative Parameterization:
    Some define X as failures before first success:
    P(X = k) = (1-p)^k √ó p for k ‚àà {0, 1, 2, ...}

Args:
    logits: Log-odds of success log(p/(1-p)), or
    probs: Probability of success p.

References:
    .. [1] Johnson, N. L., Kotz, S., & Kemp, A. W. (1992). "Univariate
           Discrete Distributions". Wiley, Chapter 5.
"""


normal = tfp_distribution(
    tfd.Normal,
    name="Normal",
)
"""Normal (Gaussian) distribution.

Mathematical Formulation:
    PDF: f(x; Œº, œÉ) = (1/‚àö(2œÄœÉ¬≤)) √ó exp(-(x-Œº)¬≤/(2œÉ¬≤))

    Where Œº ‚àà ‚Ñù is the mean, œÉ > 0 is the standard deviation.

    Mean: ùîº[X] = Œº
    Variance: Var[X] = œÉ¬≤
    MGF: M(t) = exp(Œºt + œÉ¬≤t¬≤/2)
    Support: ‚Ñù

Standard Normal:
    Z = (X - Œº)/œÉ ~ N(0, 1)

    Œ¶(z) = P(Z ‚â§ z) = ‚à´_{-‚àû}^z (1/‚àö(2œÄ)) exp(-t¬≤/2) dt

Properties:
    - Maximum entropy distribution for fixed mean and variance
    - Stable under convolution: X‚ÇÅ + X‚ÇÇ ~ N(Œº‚ÇÅ+Œº‚ÇÇ, œÉ‚ÇÅ¬≤+œÉ‚ÇÇ¬≤)
    - Central Limit Theorem: Sample means converge to Normal

Args:
    loc: Mean of the distribution Œº.
    scale: Standard deviation œÉ (> 0).

References:
    .. [1] Patel, J. K., & Read, C. B. (1996). "Handbook of the Normal
           Distribution". Marcel Dekker, 2nd edition.
"""

uniform = tfp_distribution(
    tfd.Uniform,
    name="Uniform",
)
"""Uniform distribution on an interval.

Mathematical Formulation:
    PDF: f(x; a, b) = 1/(b-a) for x ‚àà [a, b], 0 otherwise

    Where a < b define the support interval.

    Mean: ùîº[X] = (a + b)/2
    Variance: Var[X] = (b - a)¬≤/12
    CDF: F(x) = (x - a)/(b - a) for x ‚àà [a, b]
    Support: [a, b]

Properties:
    - Maximum entropy distribution on bounded interval
    - All moments exist: ùîº[X^n] = (b^(n+1) - a^(n+1))/((n+1)(b-a))
    - Order statistics have Beta distributions

Connection to Other Distributions:
    - Standard uniform U(0,1) generates other distributions
    - -log(U) ~ Exponential(1)
    - U^(1/Œ±) ~ Power distribution

Args:
    low: Lower bound a of the distribution.
    high: Upper bound b of the distribution (> low).

References:
    .. [1] Johnson, N. L., Kotz, S., & Balakrishnan, N. (1995).
           "Continuous Univariate Distributions". Wiley, Vol. 2, Chapter 26.
"""

exponential = tfp_distribution(
    tfd.Exponential,
    name="Exponential",
)
"""Exponential distribution for positive continuous values.

Mathematical Formulation:
    PDF: f(x; Œª) = Œª exp(-Œªx) for x ‚â• 0

    Where Œª > 0 is the rate parameter.

    Mean: ùîº[X] = 1/Œª
    Variance: Var[X] = 1/Œª¬≤
    CDF: F(x) = 1 - exp(-Œªx)
    Support: [0, ‚àû)

Memoryless Property:
    P(X > s + t | X > s) = P(X > t)

    The only continuous distribution with this property.

Connection to Other Distributions:
    - Special case of Gamma(1, Œª)
    - -log(U) ~ Exponential(1) where U ~ Uniform(0,1)
    - Minimum of n Exponential(Œª) ~ Exponential(nŒª)
    - Sum of n Exponential(Œª) ~ Gamma(n, Œª)

Args:
    rate: Rate parameter (> 0), or
    scale: Scale parameter (1/rate).
"""

poisson = tfp_distribution(
    tfd.Poisson,
    name="Poisson",
)
"""Poisson distribution for count data.

Mathematical Formulation:
    PMF: P(X = k) = (Œª^k / k!) √ó exp(-Œª) for k ‚àà {0, 1, 2, ...}

    Where Œª > 0 is the rate parameter (expected count).

    Mean: ùîº[X] = Œª
    Variance: Var[X] = Œª
    MGF: M(t) = exp(Œª(e^t - 1))
    Support: {0, 1, 2, ...}

Properties:
    - Mean equals variance (equidispersion)
    - Sum of Poissons: X‚ÇÅ ~ Pois(Œª‚ÇÅ), X‚ÇÇ ~ Pois(Œª‚ÇÇ) ‚áí X‚ÇÅ+X‚ÇÇ ~ Pois(Œª‚ÇÅ+Œª‚ÇÇ)
    - Limit of Binomial: Bin(n,p) ‚Üí Pois(np) as n‚Üí‚àû, p‚Üí0, np=Œª

Connection to Other Distributions:
    - Poisson process: Inter-arrival times ~ Exponential(Œª)
    - Large Œª: Approximately Normal(Œª, Œª)
    - Conditional on rate: If Œª ~ Gamma(Œ±,Œ≤), then X ~ NegBin(Œ±, Œ≤/(1+Œ≤))

Args:
    rate: Expected number of events Œª (> 0), or
    log_rate: Log of the rate parameter log(Œª).

References:
    .. [1] Johnson, N. L., Kotz, S., & Kemp, A. W. (1992). "Univariate
           Discrete Distributions". Wiley, Chapter 4.
    .. [2] Haight, F. A. (1967). "Handbook of the Poisson Distribution".
           Wiley.
"""

multivariate_normal = tfp_distribution(
    tfd.MultivariateNormalFullCovariance,
    name="MultivariateNormal",
)
"""Multivariate normal distribution.

Mathematical Formulation:
    PDF: f(x; Œº, Œ£) = (2œÄ)^(-k/2) |det(Œ£)|^(-1/2) exp(-¬Ω(x-Œº)^T Œ£^(-1) (x-Œº))

    Where Œº ‚àà ‚Ñù^k is the mean vector, Œ£ is k√ók positive definite covariance.

    Mean: ùîº[X] = Œº
    Covariance: Cov[X] = Œ£
    MGF: M(t) = exp(t^TŒº + ¬Ωt^TŒ£t)
    Support: ‚Ñù^k

Properties:
    - Linear transformations: If Y = AX + b, then Y ~ N(AŒº + b, AŒ£A^T)
    - Marginals are Normal: X_i ~ N(Œº_i, Œ£_{ii})
    - Conditional distributions are Normal with closed-form parameters
    - Maximum entropy for fixed mean and covariance

Special Cases:
    - Œ£ = œÉ¬≤I: Spherical/isotropic Gaussian
    - Œ£ diagonal: Independent components
    - k = 1: Univariate normal

Args:
    loc: Mean vector Œº of shape (k,).
    covariance_matrix: Covariance matrix Œ£ of shape (k, k) (positive definite).

References:
    .. [1] Mardia, K. V., Kent, J. T., & Bibby, J. M. (1979). "Multivariate
           Analysis". Academic Press, Chapter 3.
    .. [2] Tong, Y. L. (1990). "The Multivariate Normal Distribution".
           Springer-Verlag.
"""

dirichlet = tfp_distribution(
    tfd.Dirichlet,
    name="Dirichlet",
)
"""Dirichlet distribution for probability vectors.

Mathematical Formulation:
    PDF: f(x; Œ±) = [Œì(‚àë·µ¢Œ±·µ¢)/‚àè·µ¢Œì(Œ±·µ¢)] √ó ‚àè·µ¢ x·µ¢^(Œ±·µ¢-1)

    Where x ‚àà Œ¥_{k-1} (probability simplex), Œ±·µ¢ > 0 are concentrations.

    Mean: ùîº[X·µ¢] = Œ±·µ¢ / ‚àë‚±ºŒ±‚±º
    Variance: Var[X·µ¢] = [Œ±·µ¢(Œ±‚ÇÄ-Œ±·µ¢)] / [Œ±‚ÇÄ¬≤(Œ±‚ÇÄ+1)], where Œ±‚ÇÄ = ‚àë‚±ºŒ±‚±º
    Support: Œ¥_{k-1} = {x ‚àà ‚Ñù^k : x·µ¢ ‚â• 0, ‚àë·µ¢x·µ¢ = 1}

Properties:
    - Conjugate prior for categorical/multinomial
    - Marginals: X·µ¢ ~ Beta(Œ±·µ¢, ‚àë‚±º‚â†·µ¢Œ±‚±º)
    - Aggregation property: (X·µ¢ + X‚±º, X_rest) follows lower-dim Dirichlet
    - Neutral element: Dir(1, 1, ..., 1) = Uniform on simplex

Connection to Other Distributions:
    - k=2: Dir(Œ±‚ÇÅ, Œ±‚ÇÇ) equivalent to Beta(Œ±‚ÇÅ, Œ±‚ÇÇ)
    - Gamma construction: If Y·µ¢ ~ Gamma(Œ±·µ¢, 1), then Y/‚àëY ~ Dir(Œ±)
    - Log-normal approximation for large Œ±

Args:
    concentration: Concentration parameters Œ± (all > 0).
                  Shape (k,) determines the dimension of the distribution.

References:
    .. [1] Kotz, S., Balakrishnan, N., & Johnson, N. L. (2000). "Continuous
           Multivariate Distributions". Wiley, Vol. 1, Chapter 49.
    .. [2] Ng, K. W., Tian, G. L., & Tang, M. L. (2011). "Dirichlet and
           Related Distributions". Wiley.
"""

# High-priority additional distributions

binomial = tfp_distribution(
    tfd.Binomial,
    name="Binomial",
)
"""Binomial distribution for count data with fixed number of trials.

Mathematical Formulation:
    PMF: P(X = k) = C(n,k) √ó p^k √ó (1-p)^(n-k) for k ‚àà {0, 1, ..., n}

    Where n is the number of trials, p is success probability,
    and C(n,k) = n!/(k!(n-k)!) is the binomial coefficient.

    Mean: ùîº[X] = np
    Variance: Var[X] = np(1-p)
    MGF: M(t) = (1 - p + pe^t)^n
    Support: {0, 1, 2, ..., n}

Properties:
    - Sum of Bernoulli: X = ‚àë·µ¢ Y·µ¢ where Y·µ¢ ~ Bernoulli(p)
    - Additivity: Bin(n‚ÇÅ,p) + Bin(n‚ÇÇ,p) = Bin(n‚ÇÅ+n‚ÇÇ,p)
    - Symmetry: If p = 0.5, then P(X = k) = P(X = n-k)

Approximations:
    - Normal: For large n, np(1-p) > 10, approximately N(np, np(1-p))
    - Poisson: For large n, small p, np = Œª moderate, approximately Pois(Œª)

Args:
    total_count: Number of trials n (‚â• 0, integer).
    logits: Log-odds of success log(p/(1-p)), or
    probs: Probability of success per trial p ‚àà [0,1].

References:
    .. [1] Johnson, N. L., Kotz, S., & Kemp, A. W. (1992). "Univariate
           Discrete Distributions". Wiley, Chapter 3.
"""

gamma = tfp_distribution(
    tfd.Gamma,
    name="Gamma",
)
"""Gamma distribution for positive continuous values.

Mathematical Formulation:
    PDF: f(x; Œ±, Œ≤) = (Œ≤^Œ± / Œì(Œ±)) √ó x^(Œ±-1) √ó exp(-Œ≤x) for x > 0

    Where Œ± > 0 is the shape, Œ≤ > 0 is the rate (or Œ∏ = 1/Œ≤ is scale).

    Mean: ùîº[X] = Œ±/Œ≤ = Œ±Œ∏
    Variance: Var[X] = Œ±/Œ≤¬≤ = Œ±Œ∏¬≤
    Mode: (Œ±-1)/Œ≤ for Œ± ‚â• 1
    Support: (0, ‚àû)

Special Cases:
    - Œ± = 1: Exponential(Œ≤)
    - Œ± = k/2, Œ≤ = 1/2: Chi-squared(k)
    - Integer Œ±: Erlang distribution

Properties:
    - Additivity: Gamma(Œ±‚ÇÅ,Œ≤) + Gamma(Œ±‚ÇÇ,Œ≤) = Gamma(Œ±‚ÇÅ+Œ±‚ÇÇ,Œ≤)
    - Scaling: cX ~ Gamma(Œ±, Œ≤/c) for c > 0
    - Conjugate prior for Poisson rate, exponential rate

Connection to Other Distributions:
    - If X·µ¢ ~ Gamma(Œ±·µ¢, 1), then X·µ¢/‚àëX‚±º ~ Dirichlet(Œ±)
    - Inverse: 1/X ~ InverseGamma(Œ±, Œ≤)

Args:
    concentration: Shape parameter Œ± (> 0).
    rate: Rate parameter Œ≤ (> 0), or
    scale: Scale parameter Œ∏ = 1/Œ≤.

References:
    .. [1] Johnson, N. L., Kotz, S., & Balakrishnan, N. (1994). "Continuous
           Univariate Distributions". Wiley, Vol. 1, Chapter 17.
"""

log_normal = tfp_distribution(
    tfd.LogNormal,
    name="LogNormal",
)
"""Log-normal distribution (exponential of normal random variable).

Mathematical Formulation:
    If Y ~ N(Œº, œÉ¬≤), then X = exp(Y) ~ LogNormal(Œº, œÉ¬≤)

    PDF: f(x; Œº, œÉ) = (1/(xœÉ‚àö(2œÄ))) √ó exp(-(ln(x)-Œº)¬≤/(2œÉ¬≤)) for x > 0

    Mean: ùîº[X] = exp(Œº + œÉ¬≤/2)
    Variance: Var[X] = (exp(œÉ¬≤) - 1) √ó exp(2Œº + œÉ¬≤)
    Mode: exp(Œº - œÉ¬≤)
    Support: (0, ‚àû)

Properties:
    - Multiplicative: If X·µ¢ ~ LogN(Œº·µ¢, œÉ·µ¢¬≤) independent, then ‚àèX·µ¢ is log-normal
    - Not closed under addition (sum of log-normals is not log-normal)
    - Heavy right tail: all moments exist but grow rapidly
    - Median: exp(Œº)

Applications:
    - Income distributions
    - Stock prices (geometric Brownian motion)
    - Particle sizes
    - Species abundance

Args:
    loc: Mean Œº of underlying normal distribution.
    scale: Standard deviation œÉ of underlying normal (> 0).

References:
    .. [1] Crow, E. L., & Shimizu, K. (Eds.). (1988). "Lognormal Distributions:
           Theory and Applications". Marcel Dekker.
    .. [2] Limpert, E., Stahel, W. A., & Abbt, M. (2001). "Log-normal
           distributions across the sciences". BioScience, 51(5), 341-352.
"""

student_t = tfp_distribution(
    tfd.StudentT,
    name="StudentT",
)
"""Student's t-distribution with specified degrees of freedom.

Mathematical Formulation:
    PDF: f(x; ŒΩ, Œº, œÉ) = Œì((ŒΩ+1)/2)/(Œì(ŒΩ/2)‚àö(ŒΩœÄ)œÉ) √ó [1 + ((x-Œº)/œÉ)¬≤/ŒΩ]^(-(ŒΩ+1)/2)

    Where ŒΩ > 0 is degrees of freedom, Œº is location, œÉ > 0 is scale.

    Mean: ùîº[X] = Œº for ŒΩ > 1 (undefined for ŒΩ ‚â§ 1)
    Variance: Var[X] = œÉ¬≤ŒΩ/(ŒΩ-2) for ŒΩ > 2 (infinite for 1 < ŒΩ ‚â§ 2)
    Support: ‚Ñù

Properties:
    - Heavier tails than normal (polynomial vs exponential decay)
    - ŒΩ ‚Üí ‚àû: Converges to Normal(Œº, œÉ¬≤)
    - ŒΩ = 1: Cauchy distribution (no mean)
    - ŒΩ = 2: Finite mean but infinite variance
    - Symmetric about Œº

Standardized Form:
    If T ~ t(ŒΩ), then X = Œº + œÉT ~ t(ŒΩ, Œº, œÉ)

Connection to Other Distributions:
    - Ratio of normal to chi: If Z ~ N(0,1), V ~ œá¬≤(ŒΩ), then Z/‚àö(V/ŒΩ) ~ t(ŒΩ)
    - F-distribution: T¬≤ ~ F(1, ŒΩ) if T ~ t(ŒΩ)

Args:
    df: Degrees of freedom ŒΩ (> 0).
    loc: Location parameter Œº (default 0).
    scale: Scale parameter œÉ (> 0, default 1).

References:
    .. [1] Lange, K. L., Little, R. J., & Taylor, J. M. (1989). "Robust
           statistical modeling using the t distribution". JASA, 84(408), 881-896.
    .. [2] Kotz, S., & Nadarajah, S. (2004). "Multivariate t-distributions
           and their applications". Cambridge University Press.
"""

laplace = tfp_distribution(
    tfd.Laplace,
    name="Laplace",
)
"""Laplace (double exponential) distribution.

Args:
    loc: Location parameter (median).
    scale: Scale parameter (> 0).
"""

half_normal = tfp_distribution(
    tfd.HalfNormal,
    name="HalfNormal",
)
"""Half-normal distribution (positive half of normal distribution).

Args:
    scale: Scale parameter (> 0).
"""

inverse_gamma = tfp_distribution(
    tfd.InverseGamma,
    name="InverseGamma",
)
"""Inverse gamma distribution for positive continuous values.

Args:
    concentration: Shape parameter (alpha > 0).
    rate: Rate parameter (beta > 0), or
    scale: Scale parameter (1/rate).
"""

weibull = tfp_distribution(
    tfd.Weibull,
    name="Weibull",
)
"""Weibull distribution for modeling survival times and reliability.

Args:
    concentration: Shape parameter (k > 0).
    scale: Scale parameter (lambda > 0).
"""

cauchy = tfp_distribution(
    tfd.Cauchy,
    name="Cauchy",
)
"""Cauchy distribution with heavy tails.

Args:
    loc: Location parameter (median).
    scale: Scale parameter (> 0).
"""

chi2 = tfp_distribution(
    tfd.Chi2,
    name="Chi2",
)
"""Chi-squared distribution.

Args:
    df: Degrees of freedom (> 0).
"""

multinomial = tfp_distribution(
    tfd.Multinomial,
    name="Multinomial",
)
"""Multinomial distribution over count vectors.

Args:
    total_count: Total number of trials.
    logits: Log-probabilities for each category, or
    probs: Probabilities for each category (must sum to 1).
"""

negative_binomial = tfp_distribution(
    tfd.NegativeBinomial,
    name="NegativeBinomial",
)
"""Negative binomial distribution for overdispersed count data.

Args:
    total_count: Number of successes (> 0).
    logits: Log-odds of success, or
    probs: Probability of success per trial.
"""

zipf = tfp_distribution(
    tfd.Zipf,
    name="Zipf",
)
"""Zipf distribution for power-law distributed discrete data.

Args:
    power: Power parameter (> 1).
    dtype: Integer dtype for samples (default int32).
"""
