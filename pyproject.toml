[project]
authors = [{ name = "McCoy Becker", email = "mccoyb@mit.edu" }]
name = "genjax"
requires-python = ">= 3.12"
version = "0.1.0"
dependencies = [ "penzai>=0.2.5,<0.3", "beartype>=0.21.0,<0.22", "jaxtyping>=0.3.2,<0.4", "tensorflow-probability>=0.25.0,<0.26", "genstudio>=2025.4.1,<2026",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.pypi-dependencies]
genjax = { path = ".", editable = true }

[tool.pixi.dependencies]
jax = ">=0.6.0,<0.7"

[tool.vulture]
make_whitelist = true
min_confidence = 80
paths = ["src"]
sort_by_size = true

[tool.pixi.feature.cuda]
system-requirements = {cuda = "12"}

[tool.pixi.feature.cuda.target.linux-64.pypi-dependencies]
jaxlib = { version = "*", extras = ["cuda"] }

[tool.pixi.feature.cuda.tasks]
setup = "mkdir examples/betaber/figs"
betaber-timing = "pixi run python examples/betaber/timing.py"
gol-timing = "pixi run python examples/gol/time_scaling.py"
gol = "pixi run python examples/gol/figures.py"
curvefit = "pixi run python examples/curvefit/main.py"
localization = "pixi run python examples/localization/main.py"

[tool.pixi.feature.format.tasks]
format = "ruff format . && ruff check . --fix"
vulture = "vulture"
precommit-install = "pre-commit install"
precommit-run = "pre-commit run --all-files"

[tool.pixi.feature.docs.tasks]
deploy = "quarto publish gh-pages ./quarto"
preview = "quarto preview ./quarto"

[tool.pixi.feature.test.tasks]
test = "pytest tests/ -v --cov=src/genjax --cov-report=xml --cov-report=html --cov-report=term"
coverage = "pytest tests/ -v --cov=src/genjax --cov-report=html --cov-report=term && echo 'Coverage report available at htmlcov/index.html'"

[tool.pixi.environments]
cuda = ["cuda"]
format = { features = ["format"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "docs" }
test = { features = ["test"], solve-group = "default" }

[dependency-groups]
format = ["ruff>=0.9.2,<0.10","vulture>=2.14,<3","pre-commit>=4.0,<5"]
docs = ["jupyter"]
test = ["pytest>=8.0,<9", "pytest-cov>=6.0,<7", "coverage>=7.0,<8"]
cuda = ["matplotlib", "seaborn", "numpyro"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/quarto/*",
    "*/docs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
